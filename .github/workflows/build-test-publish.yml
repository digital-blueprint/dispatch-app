name: Build, Test and Publish
on: [push, pull_request, workflow_dispatch]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      PLAYWRIGHT_BROWSERS_PATH: /tmp/_playwright_cache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Restore playwright cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
          key: playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            playwright-

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: APP_ENV=development npm run build

      - name: Install test dependencies
        run: |
          ./node_modules/.bin/playwright install-deps chromium firefox

      - name: Run tests
        run: npm run test-full

      - name: Run lint
        run: npm run lint

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/demo' || github.ref == 'refs/heads/production'
    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Publish to NPM
        if: github.ref == 'refs/heads/main'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # https://www.npmjs.com/settings/dbp-deploy/tokens
          # NPM_TOKEN needs to be a "Publish" token with 2FA disabled!
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/.npmrc
          npm ci
          npm run build
          npm run publish

      - name: Deploy and wait for completion
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/demo' || github.ref == 'refs/heads/production'
        uses: digital-blueprint/gitlab-pipeline-trigger-action@v1
        with:
          host: 'gitlab.tugraz.at'
          trigger_token: ${{ secrets.DEPLOY_TRIGGER_TOKEN }}
          access_token: ${{ secrets.DEPLOY_ACCESS_TOKEN }}
          id: '21238'
          ref: 'main'
          variables: '{"UPSTREAM_PROJECT_PATH":"dbp/dispatch/dispatch","UPSTREAM_COMMIT_BRANCH":"${{ github.ref_name }}","UPSTREAM_COMMIT_SHA":"${{ github.ref_name }}"}'
